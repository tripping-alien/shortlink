{
    "pageTitle": "Bijective Base-6 Calculator & Explorer",
    "pageDescription": "An interactive educational tool to calculate and explore the bijective base-6 number system, which has no zero.",
    "mainTitle": "Bijective Base-6 Calculator & Explorer",
    "tabCalculator": "Calculator",
    "tabStudy": "Study",
    "tabTables": "Tables",
    "tabPractice": "Practice",
    "liveConverterTitle": "Live Conversion Explorer",
    "liveConverterDesc": "Enter a decimal number to see its real-time representation across different systems.",
    "decimalInputLabel": "Enter a Decimal Number:",
    "decimalInputPlaceholder": "e.g., 43",
    "calculatorTitle": "Bijective Math Calculator",
    "calculatorDesc": "Enter two bijective base-6 numbers to see the results for all operations.",
    "num1Placeholder": "First number",
    "num2Placeholder": "Second number",
    "calculateBtn": "Calculate All Operations",
    "prosConsTitle": "Why Learn This System?",
    "prosConsIntro": "For an engineer, understanding alternative numeral systems like bijective base-6 offers practical advantages and deepens foundational knowledge.",
    "prosTitle": "What You Gain (Pros)",
    "prosList": [
        "<strong>Error Reduction in Identifiers:</strong> You gain the ability to design systems (like databases, APIs, or logging) that are immune to bugs caused by ambiguous identifiers (e.g., leading zeros).",
        "<strong>Deeper Data Structure Insights:</strong> It provides a concrete understanding of one-to-one mapping (bijections), a core concept in data structures, serialization (e.g., Protobuf), and algorithm design.",
        "<strong>A New Problem-Solving Tool:</strong> You add a new mental model for solving problems related to enumeration, unique ID generation, and compact data representation."
    ],
    "consTitle": "What You Miss (Cons)",
    "consList": [
        "<strong>A Blind Spot in System Design:</strong> Without this knowledge, you might miss opportunities to create more robust and efficient systems, potentially re-implementing a less-optimal version of it without realizing.",
        "<strong>Weaker Foundational Knowledge:</strong> You miss a key insight into how positional notation can be adapted, which limits a full appreciation of the trade-offs made in standard computer arithmetic.",
        "<strong>Missed Connection to Real-World Systems:</strong> You won't recognize its application in common tools like spreadsheet columns or URL shorteners, missing a link between theory and practice."
    ],
    "studyAdditionTitle": "How to Perform Addition",
    "studyAdditionDesc": "Addition is performed column by column, from right to left. The key difference from decimal is how you handle carrying over when a sum exceeds 6.",
    "studyAdditionExample": "<h5>Example: <code>14 + 3</code> (Decimal: 10 + 3 = 13)</h5><p>1. <strong>Rightmost column:</strong> <code>4 + 3 = 7</code>.</p><p>2. Since 7 is greater than our base (6), we find the digit and the carry. The digit is <code>7 % 6 = 1</code>. The carry is <code>floor((7 - 1) / 6) = 1</code>.</p><p>3. <strong>Next column:</strong> We have the digit <code>1</code> plus our carry of <code>1</code>, which equals <code>2</code>.</p><p><strong>Result: <code>21</code></strong> (Decimal: 13)</p>",
    "studySubtractionTitle": "How to Perform Subtraction",
    "studySubtractionDesc": "Subtraction also works column by column. Borrowing is where it gets interesting: when you borrow from a column, you are borrowing a full <strong>6</strong>, not 10.",
    "studySubtractionExample": "<h5>Example: <code>21 - 3</code> (Decimal: 13 - 3 = 10)</h5><p>1. <strong>Rightmost column:</strong> We need to calculate <code>1 - 3</code>. Since 1 is smaller than 3, we must borrow from the next column.</p><p>2. The <code>2</code> in the next column becomes a <code>1</code>. We add the borrowed 6 to our current digit: <code>(1 + 6) - 3 = 4</code>.</p><p>3. <strong>Next column:</strong> The digit is now <code>1</code>.</p><p><strong>Result: <code>14</code></strong> (Decimal: 10)</p>",
    "studyMultiplicationTitle": "How to Perform Multiplication",
    "studyMultiplicationDesc": "Multiplication follows the same long-multiplication algorithm as decimal, but it uses the bijective base-6 multiplication table. Each partial product is calculated and then summed using bijective addition rules.",
    "studyMultiplicationExample": "<h5>Example: <code>12 Ã— 4</code> (Decimal: 8 Ã— 4 = 32)</h5><p>1. <strong>Rightmost column:</strong> <code>2 Ã— 4 = 8</code>. The digit is <code>8 % 6 = 2</code>. The carry is <code>floor((8 - 1) / 6) = 1</code>.</p><p>2. <strong>Next column:</strong> <code>1 Ã— 4 = 4</code>. Add the carry: <code>4 + 1 = 5</code>. The digit is <code>5</code>.</p><p><strong>Result: <code>52</code></strong> (Decimal: 32)</p>",
    "additionTableTitle": "Addition Table (1 to 24)",
    "multiplicationTableTitle": "Multiplication Table (1 to 24)",
    "practiceTitle": "Practice Mode",
    "practiceDesc": "Test your skills! Choose a difficulty and problem type.",
    "difficultyEasy": "Easy",
    "difficultyMedium": "Medium",
    "difficultyHard": "Hard",
    "quizModeConversions": "Conversions",
    "quizModeArithmetic": "Arithmetic",
    "quizAnswerPlaceholder": "Your answer...",
    "quizQuestionConversion": "What is {number} in bijective base-6?",
    "quizQuestionArithmetic": "What is {num1} {op} {num2}?",
    "quizCorrectFeedback": "Correct! ðŸŽ‰",
    "quizIncorrectFeedback": "Not quite! The correct answer was {answer}.",
    "quizSubmitBtn": "Submit",
    "settingsTitle": "Settings",
    "themeLabel": "Theme",
    "languageLabel": "Language",
    "themeDark": "Dark Mode",
    "themeLight": "Light Mode",
    "ui_loading": "Loading...",
    "errorBothNumbers": "Please enter both numbers.",
    "errorGeneric": "Error:",
    "githubLink": "Project source available on",
    "licenseLink": "Released under the"
}