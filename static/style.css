@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;700&display=swap');

:root {
    --bg-color: #0a0a0a;
    --text-color: #e6e6e6;
    --accent-color: #00ff41; /* Terminal Green */
    --border-color: #30363d;
    --input-bg: #1c1c1c;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: 'Fira Code', monospace;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 1rem;
    overflow: hidden; /* Prevent scrollbars from animation */
}

#background-animation {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0.5; /* Keep it subtle */
}

.container {
    max-width: 600px;
    width: 100%;
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 2rem;
    box-shadow: 0 0 20px rgba(0, 255, 65, 0.1);
    position: relative;
    z-index: 1;
}

header {
    text-align: center;
    margin-bottom: 2rem;
}

.display-5 {
    color: var(--accent-color);
    text-shadow: 0 0 5px rgba(0, 255, 65, 0.5);
    margin-bottom: 0.5rem;
}

.lead {
    color: #a0a0a0;
    margin-bottom: 0;
}

.form-grid {
    display: grid;
    grid-template-columns: 1fr; /* A single column for a stacked layout */
    gap: 1rem; /* Space between the input and the button */
    margin-bottom: 1.5rem;
}

.form-grid .btn-primary {
    justify-self: center; /* Center the button within the grid column */
}

.form-control {
    flex-grow: 1;
    padding: 0.75rem 1.5rem 0.75rem 1rem; /* top, right, bottom, left */
    border-radius: 4px;
    background-color: var(--bg-color);
    color: var(--text-color);
    border-color: var(--border-color);
    font-family: 'Fira Code', monospace;
    border-style: solid;
    border-width: 1px;
    width: 100%;
    min-width: 0;
}

.form-control:focus {
    outline: none;
    background-color: var(--bg-color);
    color: var(--text-color);
    border-color: var(--accent-color);
    box-shadow: 0 0 0 0.25rem rgba(0, 255, 65, 0.25);
}

.btn-primary {
    flex-shrink: 0;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    background-color: var(--accent-color);
    border-color: var(--accent-color);
    color: var(--bg-color);
    font-weight: bold;
    transition: background-color 0.2s, box-shadow 0.2s;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: 120px;
}

.btn-primary:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

.button-text {
    display: inline-block;
}

.spinner {
    display: none; /* Hidden by default */
    width: 1em;
    height: 1em;
    border: 2px solid rgba(10, 10, 10, 0.3);
    border-radius: 50%;
    border-top-color: var(--bg-color);
    animation: spin 1s ease-in-out infinite;
    vertical-align: middle;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

.btn-primary:hover {
    background-color: #00e639;
    border-color: #00e639;
    box-shadow: 0 0 10px rgba(0, 255, 65, 0.5);
}

.btn-secondary {
    padding: 0.5rem 1rem;
    background-color: var(--border-color);
    color: var(--text-color);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    transition: background-color 0.2s, transform 0.2s;
    cursor: pointer;
    position: relative;
}

.btn-secondary:hover {
    background-color: #444c56;
}

.btn-secondary.copied {
    background-color: var(--accent-color);
    color: var(--bg-color);
    animation: copied-animation 1.5s ease-out forwards;
}

@keyframes copied-animation {
    0% { transform: scale(1); }
    20% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

.form-info {
    text-align: center;
    color: #a0a0a0;
    font-size: 0.9em;
    margin: 1.5rem 0;
}

.form-info p {
    margin: 0;
}

.ttl-selector {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 0.5rem;
    gap: 0.5rem;
}

.ttl-selector #ttl-select {
    flex-grow: 0;
    width: auto;
    padding-right: 2rem;
}

.result-box {
    margin-top: 1.5rem;
    background-color: var(--bg-color);
    border: 1px solid var(--border-color);
    padding: 1rem;
    border-radius: 4px;
    text-align: center;
    display: none;
    opacity: 0; /* Initially hidden for animation */
}

.result-content {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

.result-box a {
    color: var(--accent-color);
    word-break: break-all;
    text-decoration: none;
}

.result-box a:hover {
    text-decoration: underline;
}

footer {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
    color: #a0a0a0;
    font-size: 0.9em;
    text-align: center;
}

footer p {
    margin: 0;
    margin-bottom: 0.5rem;
}

footer a {
    color: var(--accent-color);
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
}

.footer-links {
    margin-bottom: 1rem;
    display: flex;
    justify-content: center;
    gap: 1rem;
}

.language-switcher {
    margin-top: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: wrap;
}

.language-switcher a {
    border-radius: 4px;
    border: 1px solid transparent;
    transition: transform 0.2s, box-shadow 0.2s;
    line-height: 0;
    padding: 2px;
}

.language-switcher img {
    width: 28px;
    height: auto;
    border-radius: 2px;
    vertical-align: middle;
}

.language-switcher a:hover {
    transform: scale(1.1);
}

.language-switcher a.active {
    border-color: var(--accent-color);
    box-shadow: 0 0 8px rgba(0, 255, 65, 0.5);
}

/* =====================================================================
     Right-to-Left (RTL) Language Support
   ====================================================================== */
[dir="rtl"] {
    text-align: right;
}

[dir="rtl"] .ttl-selector,
[dir="rtl"] .result-content {
    flex-direction: row-reverse;
}

[dir="rtl"] .result-content a {
    text-align: left; /* Keep the URL text itself LTR */
}

[dir="rtl"] input,
[dir="rtl"] select {
    text-align: right;
}

[dir="rtl"] .language-switcher a {
    margin: 0 0.25rem;
}

/* =====================================================================
     Animations & Dynamic UI
   ====================================================================== */

.result-box.fade-in-up {
    animation: fadeInUp 0.5s 0.2s ease-out forwards; /* Added a small delay */
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

#toast-container {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 1000;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.toast {
    background-color: #ff4d4d; /* Error red */
    color: #fff;
    padding: 1rem 1.5rem;
    border-radius: 4px;
    font-family: 'Fira Code', monospace;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    opacity: 0;
    transform: translateX(100%);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.toast.show {
    opacity: 1;
    transform: translateX(0);
}

#animation-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 999;
    overflow: hidden;
}

.paper-airplane {
    position: absolute;
    width: 40px;
    height: 40px;
    color: var(--accent-color);
    opacity: 0;
    transform: scale(0.5) rotate(-45deg);
    /* Animation will be added via JS */
}

.paper-airplane.fly {
    animation: fly-to-result 1.2s cubic-bezier(0.25, 1, 0.5, 1) forwards;
}

@keyframes fly-to-result {
    0% {
        opacity: 1;
        transform: scale(0.5) rotate(-45deg);
    }
    40% {
        transform:
            translateX(calc( (var(--end-x) - var(--start-x)) * 0.4 ))
            translateY(calc( (var(--end-y) - var(--start-y)) * 0.4 - 100px )) /* Arc upwards */
            scale(0.8)
            rotate(15deg);
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateX(calc(var(--end-x) - var(--start-x))) translateY(calc(var(--end-y) - var(--start-y))) scale(0) rotate(90deg);
        opacity: 0;
        left: var(--start-x); /* CSS variables don't work with 'left'/'top', so we use transform */
        top: var(--start-y);
    }
}